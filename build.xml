<?xml version="1.0" encoding="UTF-8"?>
<project name="arms-fims" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.apk"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
    <exclude name="**/?*.aj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.7" value="${jdk.home.1.7}/bin"/>
  <path id="jdk.classpath.1.7">
    <fileset dir="${jdk.home.1.7}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/htmlconverter.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxrt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
      <include name="lib/ant-javafx.jar"/>
      <include name="lib/dt.jar"/>
      <include name="lib/javafx-doclet.jar"/>
      <include name="lib/javafx-mx.jar"/>
      <include name="lib/jconsole.jar"/>
      <include name="lib/sa-jdi.jar"/>
      <include name="lib/tools.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.7}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.7}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.7"/>

  
  <!-- Project Libraries -->
  
  <path id="library.arms-fims-lib.classpath">
    <fileset dir="${basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  <path id="library.biocode-fims-commons-lib.classpath">
    <fileset dir="${module.biocode-fims-commons.basedir}/lib">
      <patternset refid="library.patterns"/>
    </fileset>
  </path>
  
  
  <!-- Global Libraries -->
  
  <!-- Modules -->
  
  
  <!-- Module biocode-fims-commons -->
  
  <dirname property="module.biocode-fims-commons.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.biocode-fims-commons" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.biocode-fims-commons" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.biocode-fims-commons" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.biocode-fims-commons" value="-encoding UTF-8 -source 1.7 -target 1.7 ${compiler.args}"/>
  
  <property name="biocode-fims-commons.output.dir" value="${module.biocode-fims-commons.basedir}/out/production/biocode-fims-commons"/>
  <property name="biocode-fims-commons.testoutput.dir" value="${module.biocode-fims-commons.basedir}/out/test/biocode-fims-commons"/>
  
  <path id="biocode-fims-commons.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="biocode-fims-commons.module.production.classpath">
    <path refid="${module.jdk.classpath.biocode-fims-commons}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
  </path>
  
  <path id="biocode-fims-commons.runtime.production.module.classpath">
    <pathelement location="${biocode-fims-commons.output.dir}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
  </path>
  
  <path id="biocode-fims-commons.module.classpath">
    <path refid="${module.jdk.classpath.biocode-fims-commons}"/>
    <pathelement location="${biocode-fims-commons.output.dir}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
  </path>
  
  <path id="biocode-fims-commons.runtime.module.classpath">
    <pathelement location="${biocode-fims-commons.testoutput.dir}"/>
    <pathelement location="${biocode-fims-commons.output.dir}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.biocode-fims-commons">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.biocode-fims-commons">
    <patternset refid="excluded.from.module.biocode-fims-commons"/>
  </patternset>
  
  <path id="biocode-fims-commons.module.sourcepath">
    <dirset dir="${module.biocode-fims-commons.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.biocode-fims-commons" depends="compile.module.biocode-fims-commons.production,compile.module.biocode-fims-commons.tests" description="Compile module biocode-fims-commons"/>
  
  <target name="compile.module.biocode-fims-commons.production" description="Compile module biocode-fims-commons; production classes">
    <mkdir dir="${biocode-fims-commons.output.dir}"/>
    <javac destdir="${biocode-fims-commons.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.biocode-fims-commons}/javac">
      <compilerarg line="${compiler.args.biocode-fims-commons}"/>
      <bootclasspath refid="biocode-fims-commons.module.bootclasspath"/>
      <classpath refid="biocode-fims-commons.module.production.classpath"/>
      <src refid="biocode-fims-commons.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.biocode-fims-commons"/>
    </javac>
    
    <copy todir="${biocode-fims-commons.output.dir}">
      <fileset dir="${module.biocode-fims-commons.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.biocode-fims-commons.tests" depends="compile.module.biocode-fims-commons.production" description="compile module biocode-fims-commons; test classes" unless="skip.tests"/>
  
  <target name="clean.module.biocode-fims-commons" description="cleanup module">
    <delete dir="${biocode-fims-commons.output.dir}"/>
    <delete dir="${biocode-fims-commons.testoutput.dir}"/>
  </target>
  
  
  <!-- Module arms-fims -->
  
  <dirname property="module.arms-fims.basedir" file="${ant.file}"/>
  
  
  <property name="module.jdk.home.arms-fims" value="${project.jdk.home}"/>
  <property name="module.jdk.bin.arms-fims" value="${project.jdk.bin}"/>
  <property name="module.jdk.classpath.arms-fims" value="${project.jdk.classpath}"/>
  
  <property name="compiler.args.arms-fims" value="-encoding UTF-8 -source 1.7 -target 1.7 ${compiler.args}"/>
  
  <property name="arms-fims.output.dir" value="${module.arms-fims.basedir}/out/production/arms-fims"/>
  <property name="arms-fims.testoutput.dir" value="${module.arms-fims.basedir}/out/test/arms-fims"/>
  
  <path id="arms-fims.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="arms-fims.module.production.classpath">
    <path refid="${module.jdk.classpath.arms-fims}"/>
    <pathelement location="${biocode-fims-commons.output.dir}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
    <path refid="library.arms-fims-lib.classpath"/>
  </path>
  
  <path id="arms-fims.runtime.production.module.classpath">
    <path refid="biocode-fims-commons.runtime.production.module.classpath"/>
    <path refid="library.arms-fims-lib.classpath"/>
    <pathelement location="${arms-fims.output.dir}"/>
  </path>
  
  <path id="arms-fims.module.classpath">
    <path refid="${module.jdk.classpath.arms-fims}"/>
    <pathelement location="${biocode-fims-commons.testoutput.dir}"/>
    <pathelement location="${biocode-fims-commons.output.dir}"/>
    <path refid="library.biocode-fims-commons-lib.classpath"/>
    <path refid="library.arms-fims-lib.classpath"/>
    <pathelement location="${arms-fims.output.dir}"/>
  </path>
  
  <path id="arms-fims.runtime.module.classpath">
    <path refid="biocode-fims-commons.runtime.module.classpath"/>
    <path refid="library.arms-fims-lib.classpath"/>
    <pathelement location="${arms-fims.testoutput.dir}"/>
    <pathelement location="${arms-fims.output.dir}"/>
  </path>
  
  
  <patternset id="excluded.from.module.arms-fims">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.arms-fims">
    <patternset refid="excluded.from.module.arms-fims"/>
  </patternset>
  
  <path id="arms-fims.module.sourcepath">
    <dirset dir="${module.arms-fims.basedir}">
      <include name="src"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.arms-fims" depends="compile.module.arms-fims.production,compile.module.arms-fims.tests" description="Compile module arms-fims"/>
  
  <target name="compile.module.arms-fims.production" depends="compile.module.biocode-fims-commons" description="Compile module arms-fims; production classes">
    <mkdir dir="${arms-fims.output.dir}"/>
    <javac destdir="${arms-fims.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.arms-fims}/javac">
      <compilerarg line="${compiler.args.arms-fims}"/>
      <bootclasspath refid="arms-fims.module.bootclasspath"/>
      <classpath refid="arms-fims.module.production.classpath"/>
      <src refid="arms-fims.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.arms-fims"/>
    </javac>
    
    <copy todir="${arms-fims.output.dir}">
      <fileset dir="${module.arms-fims.basedir}/src">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.arms-fims.tests" depends="compile.module.arms-fims.production" description="compile module arms-fims; test classes" unless="skip.tests"/>
  
  <target name="clean.module.arms-fims" description="cleanup module">
    <delete dir="${arms-fims.output.dir}"/>
    <delete dir="${arms-fims.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.biocode-fims-commons, clean.module.arms-fims" description="cleanup all"/>
  
  <target name="build.modules" depends="init, compile.module.biocode-fims-commons, compile.module.arms-fims" description="build all modules"/>
  
  <target name="all" depends="build.modules" description="build all"/>

  <target name="deploy" depends="build.modules" description="build all modules and deploy application">
    <copy todir="${deploy.path}/${deploy.root.path}"
          preservelastmodified="true">
      <fileset dir="${module.arms-fims.basedir}/web">
        <include name="**/*.*"/>
      </fileset>
    </copy>
    <copy todir="${deploy.path}/${deploy.root.path}/WEB-INF/classes"
          preservelastmodified="true">
      <fileset dir="${arms-fims.output.dir}">
        <include name="**/*.*"/>
      </fileset>
      <fileset dir="${biocode-fims-commons.output.dir}">
        <include name="**/*.*"/>
      </fileset>
      <file file="arms-fims.props" />
    </copy>
    <copy todir="${deploy.path}/${deploy.root.path}/WEB-INF/lib"
          preservelastmodified="true">
      <path refid="arms-fims.module.production.classpath" />
      <path refid="biocode-fims-commons.module.production.classpath" />
    </copy>
  </target>

  <target name="war" depends="build.modules" description="build war">
    <war destfile="dist/${deploy.root.path}.war" webxml="web/WEB-INF/web.xml">
      <fileset dir="web"/>
      <lib dir="lib" />
      <lib dir="${module.biocode-fims-commons.basedir}/lib" excludes="servlet-api.jar"/>
      <classes dir="${arms-fims.output.dir}"/>
      <classes dir="${biocode-fims-commons.output.dir}"/>
      <classes dir="" includes="arms-fims.props"/>
      <classes dir="" includes="applicationContext.xml"/>
    </war>
  </target>

  <target name="deployWar" depends="war" description="deploy application as war">
    <copy todir="${deploy.path}" preservelastmodified="true">
      <fileset dir="dist">
        <include name="${deploy.root.path}.war"/>
      </fileset>
    </copy>
  </target>
</project>